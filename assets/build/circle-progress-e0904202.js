import{r as m}from"./jquery-68c15ecd.js";var w={exports:{}};/**
 * jquery-circle-progress - jQuery Plugin to draw animated circular progress bars:
 * {@link http://kottenator.github.io/jquery-circle-progress/}
 *
 * @author Rostyslav Bryzgunov <kottenator@gmail.com>
 * @version 1.2.2
 * @licence MIT
 * @preserve
 */(function(g){(function(r){if(g.exports){var c=m();r(c),g.exports=c}else r(jQuery)})(function(r){function c(t){this.init(t)}c.prototype={value:0,size:100,startAngle:-Math.PI,thickness:"auto",fill:{gradient:["#3aeabb","#fdd250"]},emptyFill:"rgba(0, 0, 0, .1)",animation:{duration:1200,easing:"circleProgressEasing"},animationStartValue:0,reverse:!1,lineCap:"butt",insertMode:"prepend",constructor:c,el:null,canvas:null,ctx:null,radius:0,arcFill:null,lastFrameValue:0,init:function(t){r.extend(this,t),this.radius=this.size/2,this.initWidget(),this.initFill(),this.draw(),this.el.trigger("circle-inited")},initWidget:function(){this.canvas||(this.canvas=r("<canvas>")[this.insertMode=="prepend"?"prependTo":"appendTo"](this.el)[0]);var t=this.canvas;if(t.width=this.size,t.height=this.size,this.ctx=t.getContext("2d"),window.devicePixelRatio>1){var e=window.devicePixelRatio;t.style.width=t.style.height=this.size+"px",t.width=t.height=this.size*e,this.ctx.scale(e,e)}},initFill:function(){var t=this,e=this.fill,i=this.ctx,a=this.size;if(!e)throw Error("The fill is not specified!");if(typeof e=="string"&&(e={color:e}),e.color&&(this.arcFill=e.color),e.gradient){var s=e.gradient;if(s.length==1)this.arcFill=s[0];else if(s.length>1){for(var n=e.gradientAngle||0,o=e.gradientDirection||[a/2*(1-Math.cos(n)),a/2*(1+Math.sin(n)),a/2*(1+Math.cos(n)),a/2*(1-Math.sin(n))],h=i.createLinearGradient.apply(i,o),l=0;l<s.length;l++){var u=s[l],p=l/(s.length-1);r.isArray(u)&&(p=u[1],u=u[0]),h.addColorStop(p,u)}this.arcFill=h}}if(e.image){var d;e.image instanceof Image?d=e.image:(d=new Image,d.src=e.image),d.complete?v():d.onload=v}function v(){var f=r("<canvas>")[0];f.width=t.size,f.height=t.size,f.getContext("2d").drawImage(d,0,0,a,a),t.arcFill=t.ctx.createPattern(f,"no-repeat"),t.drawFrame(t.lastFrameValue)}},draw:function(){this.animation?this.drawAnimated(this.value):this.drawFrame(this.value)},drawFrame:function(t){this.lastFrameValue=t,this.ctx.clearRect(0,0,this.size,this.size),this.drawEmptyArc(t),this.drawArc(t)},drawArc:function(t){if(t!==0){var e=this.ctx,i=this.radius,a=this.getThickness(),s=this.startAngle;e.save(),e.beginPath(),this.reverse?e.arc(i,i,i-a/2,s-Math.PI*2*t,s):e.arc(i,i,i-a/2,s,s+Math.PI*2*t),e.lineWidth=a,e.lineCap=this.lineCap,e.strokeStyle=this.arcFill,e.stroke(),e.restore()}},drawEmptyArc:function(t){var e=this.ctx,i=this.radius,a=this.getThickness(),s=this.startAngle;t<1&&(e.save(),e.beginPath(),t<=0?e.arc(i,i,i-a/2,0,Math.PI*2):this.reverse?e.arc(i,i,i-a/2,s,s-Math.PI*2*t):e.arc(i,i,i-a/2,s+Math.PI*2*t,s),e.lineWidth=a,e.strokeStyle=this.emptyFill,e.stroke(),e.restore())},drawAnimated:function(t){var e=this,i=this.el,a=r(this.canvas);a.stop(!0,!1),i.trigger("circle-animation-start"),a.css({animationProgress:0}).animate({animationProgress:1},r.extend({},this.animation,{step:function(s){var n=e.animationStartValue*(1-s)+t*s;e.drawFrame(n),i.trigger("circle-animation-progress",[s,n])}})).promise().always(function(){i.trigger("circle-animation-end")})},getThickness:function(){return r.isNumeric(this.thickness)?this.thickness:this.size/14},getValue:function(){return this.value},setValue:function(t){this.animation&&(this.animationStartValue=this.lastFrameValue),this.value=t,this.draw()}},r.circleProgress={defaults:c.prototype},r.easing.circleProgressEasing=function(t){return t<.5?(t=2*t,.5*t*t*t):(t=2-2*t,1-.5*t*t*t)},r.fn.circleProgress=function(t,e){var i="circle-progress",a=this.data(i);if(t=="widget"){if(!a)throw Error('Calling "widget" method on not initialized instance is forbidden');return a.canvas}if(t=="value"){if(!a)throw Error('Calling "value" method on not initialized instance is forbidden');if(typeof e>"u")return a.getValue();var s=arguments[1];return this.each(function(){r(this).data(i).setValue(s)})}return this.each(function(){var n=r(this),o=n.data(i),h=r.isPlainObject(t)?t:{};if(o)o.init(h);else{var l=r.extend({},n.data());typeof l.fill=="string"&&(l.fill=JSON.parse(l.fill)),typeof l.animation=="string"&&(l.animation=JSON.parse(l.animation)),h=r.extend(l,h),h.el=n,o=new c(h),n.data(i,o)}})}})})(w);
